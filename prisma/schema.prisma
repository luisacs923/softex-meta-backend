generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Colaborador {
  id                   Int                   @id @default(autoincrement())
  nome                 String
  cpf                  String
  cbo                  String
  contrato_colaborador ContratoColaborador[]
  entregaEpi           EntregaEpi[]
}

model Servico {
  id             Int             @id @default(autoincrement())
  nome           String
  categoria      String
  contrato_geral ContratoGeral[]
}

model Prestador {
  id             Int             @id @default(autoincrement())
  nome           String
  cnpj           String
  endereco       String
  telefone       String
  email          String
  contrato_geral ContratoGeral[]
}

model Cliente {
  id             Int             @id @default(autoincrement())
  nome           String
  cnpj           String
  endereco       String
  telefone       String
  email          String
  contrato_geral ContratoGeral[]
}

model Material {
  id                Int                @id @default(autoincrement())
  nome              String
  categoria         String
  unidade_medida    String
  quantidade_minima Float
  quantidade_atual  Float
  material_contrato MaterialContrato[]
}

model EPI {
  id         Int          @id @default(autoincrement())
  nome       String
  categoria  String
  ca         String
  tipo       String
  qtdMinima  Int
  qtdAtual   Int
  entregaEpi EntregaEpi[]
}

model EntregaEpi {
  id             Int         @id @default(autoincrement())
  data_entrega   DateTime
  data_devolucao DateTime?
  observacao     String
  id_epi         Int
  id_colaborador Int
  colaborador    Colaborador @relation(fields: [id_colaborador], references: [id])
  epi            EPI         @relation(fields: [id_epi], references: [id])
}

model ContratoGeral {
  id                   Int                   @id @default(autoincrement())
  descricao_servico    String
  responsavel          String
  data_inicio          DateTime
  data_fim             DateTime
  valor                Float
  id_prestador         Int
  id_cliente           Int
  id_servico           Int
  contrato_colaborador ContratoColaborador[]
  servico              Servico               @relation(fields: [id_servico], references: [id])
  cliente              Cliente               @relation(fields: [id_cliente], references: [id])
  prestador            Prestador             @relation(fields: [id_prestador], references: [id])
  material_contrato    MaterialContrato[]
}

model ContratoColaborador {
  id                Int           @id @default(autoincrement())
  data_inicio       DateTime
  data_fim          DateTime
  quantidade_horas  Float
  valor_hora        Float
  id_contrato_geral Int
  id_colaborador    Int
  colaborador       Colaborador   @relation(fields: [id_colaborador], references: [id])
  contrato_geral    ContratoGeral @relation(fields: [id_contrato_geral], references: [id])
}

model MaterialContrato {
  id                    Int           @id @default(autoincrement())
  quantidade_solicitada Float
  quantidade_utilizada  Float?
  quantidade_devolvida  Float?
  data_entrega          DateTime
  data_devolucao        DateTime?
  observacao            String
  id_contrato_geral     Int
  id_material           Int
  material              Material      @relation(fields: [id_material], references: [id])
  contrato_geral        ContratoGeral @relation(fields: [id_contrato_geral], references: [id])
}
